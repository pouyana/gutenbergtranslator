<script type="text/javascript">
function ajaxCallParagraphs() {
    var Page = getActivePage();
    var Type = getParagraphType("Paragraph" + getActiveParagraph());
    var Plimit = getActiveLimit();
    $.ajax({
        url: "getParagraphs.json",
        type: "Post",
        data: {
            id: <%= params[:id] %> ,
            limit: Plimit,
            page: Page,
            type: Type
        },
        dataType: "json"
    }).done(function (data) {
        var parttobeadded = "<div class='accordion' id='accordion2'>";
        for (var i = 0; i < data.length; i++) {
            htmlprefix = "<div class='accordion-group'> <div class='accordion-heading'> <a class='accordion-toggle' data-toggle='collapse' data-parent='#accordion2' href='#collapse"+i+"'>";
            htmltitle = data[i].paragraph.body.substring(0,40) + "...";
            htmlprefix2 = "<div id='collapse"+i+"' class='accordion-body collapse'><div class='accordion-inner'>";
            htmlsuffix =  "</a></div>";
            htmltextbox = "<div class='row-fluid'><textarea class='span9' id='TextArea"+i+"' rows='3'></textarea></div>";
            htmlbuttonlist = "<div class='row-fluid'><button class='btn btn-small btn-primary'>Translate</button></div>";
            htmlpart = "<div class='span9'>"+data[i].paragraph.body+"</div>";
            htmlsuffix2 = "</div></div></div>";
            parttobeadded = parttobeadded + htmlprefix+htmltitle+htmlsuffix+htmlprefix2+htmlpart+htmltextbox+htmlbuttonlist+htmlsuffix2;
        }
        parttobeadded = parttobeadded+" </div>";
        $("#changed").html(parttobeadded);
    });
}

function isNumber(o) {
    return !isNaN(o - 0);
}

Array.min = function (array) {
    return Math.min.apply(Math, array);
};

Array.max = function (array) {
    return Math.max.apply(Math, array);
};

function pagiUpdater(Id, Num) {
    if (Id == "Next") {
        $("#" + Id).parent().before("<li><a id=\"" + "Pagi" + Num + "\" href=\"#\">" + Num + "</a></li>");
    } else {
        $("#" + Id).parent().after("<li><a id=\"" + "Pagi" + Num + "\" href=\"#\">" + Num + "</a></li>");
    }
    var PagiNum = "Pagi" + Num;
    getDynamicFunctions([PagiNum], actionPagi);
}

function getAllElements(Element, Type) {
    var RegEx = Element + "[id^=\"" + Type + "\"" + "]";
    var ParentElement = $(RegEx);
    return ParentElement;
}

function getAllElementToArray(Element, Type) {
    var Elements = getAllElements(Element, Type);
    var IdArray = new Array;
    Elements.each(function () {
        IdArray.push($(this).attr('id'));
    });
    return IdArray;
}

function getActive(Element, Type, defaultvalue) {
    var ParentElement = getAllElements(Element, Type);
    var value = defaultvalue;
    ParentElement.each(function () {
        if ($(this).parent().hasClass("active")) {
            value = $(this).text();
        }
    });
    return value;
}


function getActiveLimit() {
    return getActive("a", "Limit", 10);
}

function getActivePage() {
    return getActive("a", "Pagi", 1);
}

function getActiveParagraph() {
    return getActive("a", "Paragraph", "Untranslated");
}

function getAllButtons(Id) {
    return AllButtons = $("#" + Id).parent().siblings();
}

function getNumberedButtons(Id) {
    AllButtons = getAllButtons(Id);
    NumberedButtonArray = new Array;
    AllButtons.each(function () {
        if (isNumber($(this).children().text())) {
            NumberedButtonArray.push($(this));
        }
    });
    return NumberedButtonArray;
}

function getNumberedButtonToIntArray(NumberedButtonArray) {
    var NumberedButtonToIntArray = new Array;
    for (var i = 0; i < NumberedButtonArray.length; i++) {
        NumberedButtonToIntArray.push((NumberedButtonArray[i].children().text()));
    }
    return NumberedButtonToIntArray;
}

function getParagraphType(type) {
    switch (type) {
        case "ParagraphUntranslated":
            return 0;
            break;
        case "ParagraphTranslated":
            return 1;
            break;
        case "ParagraphAll":
            return 2;
            break;
    }
}

function actionPagi(Element) {
  $("#" + Element).click(function () {
        if(!($(this).parent().hasClass("active"))){
        $(this).parent().addClass("active");
        $(this).parent().siblings().removeClass("active");
        ajaxCallParagraphs();
      }
    });
}

function actionParagraph(ParagraphId) {
    $("#" + ParagraphId).click(function () {
        menuUpdater(ParagraphId);
        ajaxCallParagraphs();
        var Page = getActivePage();
        if (!($("#Pagi" + Page).parent().hasClass("active"))) {
            $("#Pagi" + Page).parent().addClass("active");
        }
    });
}

function actionLimit(LimitId) {
    $("#" + LimitId).click(function () {
        menuUpdater(LimitId);
    });
}


function nextButton() {
    var ButtonNext = "Next";
    $("#Next").click(function () {
        var AllButtons = getAllButtons(ButtonNext);
        var NumberedButtons = getNumberedButtons(ButtonNext);
        var NumberedButtonToInt = getNumberedButtonToIntArray(NumberedButtons);
        var Minimum = Array.min(NumberedButtonToInt);
        AllButtons.each(function () {
            if ($(this).children().text() == Minimum) {
                var Num = parseInt($(this).children().text()) + NumberedButtonToInt.length;
                pagiUpdater(ButtonNext, Num);
                var NextPrev = $("#Prev").parent().next();
                if (NextPrev.hasClass("active")) {
                    NextPrev.next().addClass("active");
                    NextPrev.remove();
                    ajaxCallParagraphs();
                } else {
                    NextPrev.remove();
                }
            }
        });
    });
}

function prevButton() {
    var ButtonPrev = "Prev";
    $("#Prev").click(function () {
        var AllButtons = getAllButtons(ButtonPrev);
        var NumberedButtons = getNumberedButtons(ButtonPrev);
        var NumberedButtonToInt = getNumberedButtonToIntArray(NumberedButtons);
        var Maximum = Array.max(NumberedButtonToInt);
        AllButtons.each(function () {
            if ($(this).children().text() == Maximum) {
                var Num = parseInt($(this).children().text()) - NumberedButtonToInt.length;
                if (Num > 0) {
                    pagiUpdater(ButtonPrev, Num);
                    var PrevNext = $("#Next").parent().prev();
                    if (PrevNext.hasClass("active")) {
                        PrevNext.prev().addClass("active");
                        PrevNext.remove();
                        ajaxCallParagraphs();
                    } else {
                        PrevNext.remove();
                    }
                }
            }
        });
    });
}

function menuUpdater(Element) {
    var FirstChars = Element.charAt(0) + Element.charAt(1) + Element.charAt(2);
    var Hideable = FirstChars + "hide";
    var regEx = "i[id^=\"" + Hideable + "\"" + "]";
    $(regEx).parent().parent().removeClass("active");
    $(regEx).hide();
    $("#" + Element).prepend("<i class=\"icon-ok\" id=\"" + Hideable + "\" ></i>");
    $("#" + Element).parent().addClass("active");
}


function getDynamicFunctions(IdArray, FunctionName) {
    for (var i = 0; i < IdArray.length; i++) {
        var IdElement = IdArray[i];
        FunctionName(IdElement);
    }
}

$(document).ready(function () {
    getDynamicFunctions(getAllElementToArray("a", "Paragraph"), actionParagraph);
    getDynamicFunctions(getAllElementToArray("a", "Limit"), actionLimit);
    getDynamicFunctions(getAllElementToArray("a", "Pagi"), actionPagi);
    nextButton();
    prevButton();
    });
</script>
<div class="row-fluid">
  <div class="span8">
    <%book = @book%>
    <%percent = @percent %>
    <%= book.title %>
    by <b><%=book.author%></b>
    Translated <%=percent%> %
  </div>
  <div class="btn-group">
    <button class="btn btn-small btn-primary dropdown-toggle" data-toggle="dropdown">Limit<span class="caret"></span></button>
    <ul class="dropdown-menu" style="white-space:nowrap">
      <li><a id="Limit10" href="#">10</a></li>
      <li><a id="Limit50" href="#">50</a></li>
      <li><a id="Limit100" href="#">100</a></li>
    </ul>
  </div>
  <div class="btn-group">
    <button class="btn btn-small btn-primary dropdown-toggle" data-toggle="dropdown">Paragraphs <span class="caret"></span></button>
    <ul class="dropdown-menu">
      <li><a id="ParagraphUntranslated" href="#">Untranslated</a></li>
      <li><a id="ParagraphTranslated" href="#">Translated</a></li>
      <li><a id="ParagraphAll" href="#">All</a></li>
    </ul>
  </div>
  <div class="btn-group">
    <button class="btn btn-small btn-primary dropdown-toggle" data-toggle="dropdown">Words<span class="caret"></span></button>
    <ul class="dropdown-menu">
      <li><a href="#">Untranslated</a></li>
      <li><a href="#">Translated</a></li>
      <li><a href="#">All</a></li>
    </ul>
  </div>
  <div class="btn-group">
    <button class="btn btn-small btn-primary dropdown-toggle" data-toggle="dropdown">My Translations<span class="caret"></span></button>
    <ul class="dropdown-menu">
      <li><a href="#">Words</a></li>
      <li><a href="#">Paragraphs</a></li>
    </ul>
  </div>

</div>
<div class="row-fluid">
       <div id="changed">
 </div>
</div>
<div class="pagination pagination-centered">
  <ul>
    <li><a id="Prev"  href="#">Prev</a></li>
    <li><a id="Pagi1" href="#">1</a></li>
    <li><a id="Pagi2" href="#">2</a></li>
    <li><a id="Pagi3" href="#">3</a></li>
    <li><a id="Pagi4" href="#">4</a></li>
    <li><a id="Pagi5" href="#">5</a></li>
    <li><a id="Next"  href="#">Next</a></li>
  </ul>
</div>

